- name: Initialize docker swarm and grab the join token
  hosts: swarm_manager
  become: true
  tasks:
    - name: Check if Swarm has already been Initialized
      shell: docker node ls
      register: swarm_status
      ignore_errors: true
    - name: Initialize Docker Swarm
      docker_swarm:
        state: present
      when: swarm_status.rc != 0
      run_once: true
    - name: Change task-history limit to 0
      shell: docker swarm update --task-history-limit 0
    - name: Get the worker join-token
      shell: docker swarm join-token --quiet worker
      register: worker_token
- name: Add nodes to the docker swarm
  hosts: swarm_nodes
  become: true
  tasks:
    - name: Add Workers to the Swarm
      community.docker.docker_swarm:
        state: join
        advertise_addr: "{{ ansible_host }}"
        join_token: "{{ hostvars[groups['swarm_manager'][0]]['worker_token']['stdout'] }}"
        remote_addrs: [ "{{ hostvars[groups['swarm_manager'][0]]['ansible_default_ipv4']['address'] }}:2377" ]
- name: Deploy docker containers for portainer, NGINX and file manager on the loadbalancer node
  hosts: loadbalancer
  become: true
  tasks:
    - name: Spin-up a Portainer instance for management of Swarm
      docker_container:
        name: Portainer
        image: portainer/portainer-ce
        state: started
        recreate: yes
        restart_policy: always
        published_ports:
          - "8000:8000"
          - "9000:9000"
          - "9443:9443"
        volumes:
          - /var/run/docker.sock:/var/run/docker.sock
          - portainer_data:/data
    - name: Deploy NGINX load-balancer
      community.docker.docker_container:
        name: Load-Balancer
        image: nginx
        state: started
        volumes:
          - /nas-01/Container-configs/loadbalancer/:/etc/nginx/conf.d
        ports:
        - 9003-9020:9003-9020
        - 10000-10020:10000-10020
        - 11000-11020:11000-11020
        - 12000-12020:12000-12020
        - 13000-13020:13000-13020
        - 14000-14020:14000-14020
        - 15000-15020:15000-15020
        restart_policy: always
    - name: Deploy File-Manager for GlusterFS volume
      community.docker.docker_container:
        name: File-Manager
        image: hurlenko/filebrowser
        state: started
        volumes:
          - /nas-01/Container-configs/file-browser-glusterfs:/config
          - /mnt/gluster:/data
        ports:
          - 9002:8080
        env:
          PUID: "1000"
          PGID: "1000"
          TZ: "Europe/London"
        restart_policy: always
- name: Create the portainer agent network and deploy the portainer agent
  hosts: swarm_manager
  become: true
  tasks:
    - name: Create the portainer_agent_network
      docker_network:
        name: portainer_agent_network
        driver: overlay
    - name: Start portainer_agent service
      docker_swarm_service:
        name: portainer_agent
        image: portainer/agent:2.18.2
        networks:
          - portainer_agent_network
        publish:
          - published_port: 9001
            target_port: 9001
            protocol: tcp
        mode: global
        placement:
          constraints:
            - node.platform.os == linux
        mounts:
          - source: //var/run/docker.sock
            target: /var/run/docker.sock
            type: bind
          - source: //var/lib/docker/volumes
            target: /var/lib/docker/volumes
            type: bind